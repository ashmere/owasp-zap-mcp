[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "owasp-zap-mcp"
version = "0.3.2"
description = "OWASP ZAP MCP Server for AI-powered security testing (independent implementation)"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Mat Davies", email = "mat.davies@ashmere.dev"}
]
maintainers = [
    {name = "Mat Davies", email = "mat.davies@ashmere.dev"}
]
keywords = ["owasp", "zap", "security", "mcp", "ai", "testing", "vulnerability", "scanning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Security",
    "Topic :: Software Development :: Testing",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

dependencies = [
    "mcp[cli]>=1.0.0",
    "zaproxy==0.4.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "fastapi>=0.95.0",
    "uvicorn>=0.21.0",
    "toml>=0.10.2"
]

[project.urls]
Homepage = "https://github.com/ashmere/owasp-zap-mcp"
Repository = "https://github.com/ashmere/owasp-zap-mcp"
Issues = "https://github.com/ashmere/owasp-zap-mcp/issues"
Documentation = "https://github.com/ashmere/owasp-zap-mcp/blob/main/README.md"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "aiohttp>=3.8.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "bandit>=1.7.5",
    "pre-commit>=3.6.0",
    "safety>=3.0.0"
]

[project.scripts]
# Entry point for stdio mode
owasp-zap-mcp = "owasp_zap_mcp.mcp_core:run_stdio"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["owasp_zap_mcp", "owasp_zap_mcp.tools"]

[tool.setuptools.package-data]
owasp_zap_mcp = ["*.py"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
