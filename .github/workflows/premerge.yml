name: Pre-merge Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      skip_cache:
        description: 'Skip pre-commit cache'
        required: false
        default: false
        type: boolean

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # For commenting on PRs if needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for better pre-commit performance
          fetch-depth: 0

      - name: Detect local testing environment
        id: detect-local
        run: |
          # Detect if running under act or other local testing conditions
          if [[ -n "$ACT" || -n "$ACT_LOCAL_TESTING" || "${{ runner.name }}" == "Hosted Agent" ]]; then
            echo "local_testing=true" >> $GITHUB_OUTPUT
            echo "skip_cache=true" >> $GITHUB_OUTPUT
            echo "üîß Local testing environment detected"
          else
            echo "local_testing=false" >> $GITHUB_OUTPUT
            echo "skip_cache=${{ inputs.skip_cache || 'false' }}" >> $GITHUB_OUTPUT
            echo "üöÄ GitHub Actions environment detected"
          fi

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "owasp_zap_mcp/uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          # Step 1: Create virtual environment (this was missing!)
          uv venv --project owasp_zap_mcp
          source owasp_zap_mcp/.venv/bin/activate
          # Step 2: Sync dependencies from pyproject.toml and uv.lock
          cd owasp_zap_mcp
          uv sync --dev
          cd ..
      - name: Cache pre-commit hooks
        if: ${{ steps.detect-local.outputs.skip_cache == 'false' }}
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-

      - name: Install pre-commit hooks
        run: |
          echo "üì¶ Installing pre-commit hooks..."
          pre-commit install --install-hooks

      - name: Run pre-commit on all files
        if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "üîç Running pre-commit on all files (manual trigger)..."
          else
            echo "üîç Running pre-commit on all files (push to main)..."
          fi
          pre-commit run --all-files

      - name: Run pre-commit on changed files
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "üîç Running pre-commit on changed files..."
          # Get the base branch for comparison
          git fetch origin ${{ github.base_ref }}

          # Run pre-commit on files changed in this PR
          pre-commit run --from-ref origin/${{ github.base_ref }} --to-ref HEAD

      - name: Run fast unit tests
        run: |
          echo "üß™ Running fast unit tests (excluding integration tests)..."
          cd owasp_zap_mcp

          # Debug: Show uv environment info
          echo "üìç uv environment info:"
          uv run python --version
          uv run pip list | grep pytest || echo "‚ö†Ô∏è pytest not found"

          # Run only fast, reliable tests - exclude integration tests that require ZAP
          uv run pytest -v -m "not integration and not slow and not real_world" --tb=short --no-header

      - name: Output summary
        if: always()
        run: |
          echo "üìã Pre-commit Check Summary:"
          echo "  Trigger: ${{ github.event_name }}"
          echo "  Local Testing: ${{ steps.detect-local.outputs.local_testing }}"
          echo "  Cache Skipped: ${{ steps.detect-local.outputs.skip_cache }}"

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "  PR Number: #${{ github.event.number }}"
            echo "  Base Branch: ${{ github.base_ref }}"
            echo "  Head Branch: ${{ github.head_ref }}"
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            echo "  Branch: ${{ github.ref_name }}"
            echo "  Commit: ${{ github.sha }}"
          fi

          echo ""
          echo "‚úÖ Pre-commit checks completed!"
